<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <!-- TODO: ここをカスタマイズ -->
  <name>LibraryProject</name>
  <groupId>com.example</groupId>
  <artifactId>library</artifactId>
  <version>0.1</version>
  <url>http://example.com/trac/library/</url>
  <description>
    Sample Project for library.
  </description>

  <packaging>jar</packaging>
 <properties>
 <junit.code.coverage>true</junit.code.coverage>
     <src.encoding>utf-8</src.encoding>
  </properties>

  <repositories>
    <repository>
      <id>example.com</id>
      <name>My Maven Repository</name>
      <!-- TODO: プロジェクトで管理しているMavenのアーティファクトのパスを指定 -->
      <url>http://localhost/maven/</url>
      <layout>default</layout>	  
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>local-repository</id>
      <!-- TODO: ビルド成果物を配備するmavenリポジトリを指定 -->
      <url>scp://localhost/var/opt/alminium/maven</url>
    </repository>
  </distributionManagement>

  <scm>
    <!-- TODO:connection,developerConnection,urlをRedmineで管理するGitのパスに置換 -->
    <connection>scm:git:http://localhost/git/projname</connection>
    <developerConnection>scm:git:http://localhost/git/projname</developerConnection>
    <url>http://localhost/projects/projname</url>
  </scm>

  <ciManagement>
    <system>continuum</system>
<!-- TODO: メールを利用する場合は、ここのコメントを有効にする
    <notifiers>
      <notifier>
        <type>mail</type>
        <configuration>
          <address>dev-ml@example.com</address>
        </configuration>
      </notifier>
    </notifiers>
-->
  </ciManagement>

  <!-- 開発者のリストを記述(省略可能) -->
  <developers>
    <developer>
      <name>Takashi Okamoto</name>
      <email>hoge@example.com</email>
    </developer>
  </developers>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <reporting>
    <plugins>

      <!-- siteプラグインの出力設定 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <outputEncoding>UTF-8</outputEncoding>
          <inputEncoding>${src.encoding}</inputEncoding>
          <locales>ja</locales>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>

      <!-- javadocの出力 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <docencoding>UTF-8</docencoding>
          <encoding>${src.encoding}</encoding>
        </configuration>
      </plugin>

      <!-- CheckStyleのレポート出力 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <encoding>${src.encoding}</encoding>
        </configuration>
      </plugin>

      <!-- FindBugsのレポート出力 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>

      <!-- PMDのレポート出力 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <sourceEncoding>${src.encoding}</sourceEncoding>
        </configuration>
      </plugin>

      <!-- カバレッジの出力 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>

      <!-- メトリックスの出力 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javancss-maven-plugin</artifactId>
      </plugin>

      <!-- クロスリファレンス -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <configuration>
          <aggregate>true</aggregate>
	  <inputEncoding>${src.encoding}</inputEncoding>
	  <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>

    </plugins>
  </reporting>

  <build>
    <plugins>
    
      <!-- Mavenリポジトリへのデプロイプロトコルにsshを追加  -->
      <plugin> 
        <artifactId>maven-deploy-plugin</artifactId> 
        <version>2.5</version> 
        <dependencies> 
          <dependency> 
            <groupId>org.apache.maven.wagon</groupId> 
            <artifactId>wagon-ssh</artifactId> 
            <version>1.0-beta-7</version>
          </dependency> 
        </dependencies> 
      </plugin> 
     
      <!-- jacocoのjavaagentの設定 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
           <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${src.encoding}</encoding>
        </configuration>
      </plugin>
      <!-- Javaコンパイラの設定 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <encoding>${src.encoding}</encoding>
        </configuration>
      </plugin>

      <!-- テストの実行/レポート -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
    </plugins>
 </build>

</project>
